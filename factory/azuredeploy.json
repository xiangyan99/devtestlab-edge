{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "labName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the lab (default: the name of the containing resource group)."
      }
    },
    "vpnAccess": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Enable OpenVPN access to the lab's network."
      }
    },
    "vpnAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The OpenVPN administrator's username."
      }
    },
    "vpnAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The OpenVPN administrator's password."
      }
    },
    "githubName": {
      "type": "string",
      "defaultValue": "markusheiliger/devtestlab-edge",
      "metadata": {
        "description": "The name of the GitHub repository to access."
      }
    },
    "githubUri": {
      "type": "string",
      "defaultValue": "https://github.com/markusheiliger/devtestlab-edge.git",
      "metadata": {
        "description": "The URI of the GitHub repository to access."
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to access."
      }
    },
    "githubToken": {
      "type": "securestring",
      "metadata": {
        "description": "Your GitHub token to use for authenticating when accessing the artifacts and environment definitions."
      }
    },
    "githubArtifactsPath": {
      "type": "string",
      "defaultValue": "/artifacts",
      "metadata": {
        "description": "The path to the artifacts folder inside the repository."
      }
    },
    "githubEnvironmentsPath": {
      "type": "string",
      "defaultValue": "/environments",
      "metadata": {
        "description": "The path to the environments folder inside the repository."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[uri(deployment().properties.templateLink.uri, '')]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "labVirtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', variables('labVirtualNetworkName'))]",
    "labVirtualNetworkName": "[concat(parameters('labName'), 'VNet')]",
    "labVirtualNetworkPrefix": "192.168.0.0/16",
    "labSubnetId": "[concat(variables('labVirtualNetworkId'), '/subnets/', variables('labSubnetName'))]",
    "labSubnetName": "LabSubnet1",
    "labSubnetPrefix": "192.168.0.0/18",
    "labGatewayIP": "192.168.0.4",
    "labGatewayPoolPrefix": "192.168.250.0/24",
    "labRoutesName": "[concat(parameters('labName'), 'Routes')]",
    "labRoutes" : {
      "gateway" : [
        {
          "name": "VPNDownstream",
          "properties": {
            "addressPrefix": "[variables('labGatewayPoolPrefix')]",
            "nextHopType": "VirtualAppliance",
            "nextHopIpAddress": "[variables('labGatewayIP')]"
          }
        }
      ],
      "default": []
    },
    "artifactRepositoryName": "[concat('privaterepo', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('labRoutesName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": "[variables('labRoutes')[if(equals(parameters('vpnAccess'), 'yes'), 'gateway', 'default')]]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('labVirtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/routeTables/', variables('labRoutesName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('labVirtualNetworkPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('labSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('labSubnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('labRoutesName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-26-preview",
      "type": "Microsoft.DevTestLab/labs",
      "name": "[parameters('labName')]",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "apiVersion": "2017-04-26-preview",
          "name": "[variables('labVirtualNetworkName')]",
          "type": "virtualNetworks",
          "dependsOn": [
            "[resourceId('Microsoft.DevTestLab/labs', parameters('labName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('labVirtualNetworkName'))]"
          ],
          "properties": {
            "externalProviderResourceId": "[variables('labVirtualNetworkId')]",
            "subnetOverrides": [
              {
                "name": "[variables('labSubnetName')]",
                "resourceId": "[variables('labSubnetId')]",
                "useInVmCreationPermission": "Allow",
                "usePublicIpAddressPermission": "Allow"
              }
            ]
          }
        },
        {
          "apiVersion": "2017-04-26-preview",
          "name": "[variables('artifactRepositoryName')]",
          "type": "artifactSources",
          "dependsOn": [
            "[resourceId('Microsoft.DevTestLab/labs', parameters('labName'))]"
          ],
          "properties": {
            "securityToken": "[parameters('githubToken')]",
            "displayName": "[parameters('githubName')]",
            "uri": "[parameters('githubUri')]",
            "sourceType": "GitHub",
            "folderPath": "[parameters('githubArtifactsPath')]",
            "armTemplateFolderPath": "[parameters('githubEnvironmentsPath')]",
            "branchRef": "[parameters('githubBranch')]",
            "status": "Enabled"
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('vpnAccess'), 'yes')]",
      "name": "[concat(deployment().name, '-VPNGateway')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('labVirtualNetworkName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/azuredeploy_gateway.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('vpnAdminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('vpnAdminPassword')]"
          },
          "labName": {
            "value": "[parameters('labName')]"
          },
          "labNetworkName": {
            "value": "[variables('labVirtualNetworkName')]"
          },
          "labSubnetName": {
            "value": "[variables('labSubnetName')]"
          },
          "labGatewayIP": {
            "value": "[variables('labGatewayIP')]"
          },
          "labGatewayPoolPrefix":{
            "value": "[variables('labGatewayPoolPrefix')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}