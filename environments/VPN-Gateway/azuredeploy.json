{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "labResourceGroupName": {
            "type": "string"
        },
        "labVirtualNetworkName": {
            "type": "string",
            "defaultValue": "[concat(parameters('labResourceGroupName'), 'VNet')]"
        },
        "vpnClientAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24"
        },
        "vpnClientRootCertName": {
            "type": "string"
        },
        "vpnClientRootCertData": {
            "type": "string"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/markusheiliger/devtestlab-edge/vpn-gateway/environments/VPN-Gateway"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "resourcePrefix": "[concat('gw-', uniqueString(resourceGroup().id))]",
        "labVirtualNetworkId": "[resourceId(parameters('labResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('labVirtualNetworkName'))]",
        "gatewayName": "[variables('resourcePrefix')]",
        "gatewayVirtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', variables('gatewayVirtualNetworkName'))]",
        "gatewayVirtualNetworkName": "[concat(variables('resourcePrefix'), '-vnet')]",
        "gatewayVirtualNetworkPrefix": "192.168.240.0/20",
        "gatewaySubnetName": "GatewaySubnet",
        "gatewaySubnetPrefix": "192.168.250.0/24",
        "gatewaySubnetRef": "[concat(variables('gatewayVirtualNetworkId'), '/subnets/', variables('gatewaySubnetName'))]",
        "gatewayPeeringName": "peering-to-lab-vnet",
        "gatewayPublicIpName": "[concat(variables('resourcePrefix'), '-pip')]"
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('gatewayVirtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('gatewayVirtualNetworkPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('gatewaySubnetPrefix')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('gatewayPeeringName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('gatewayVirtualNetworkName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": true,
                        "remoteVirtualNetwork": {
                            "id": "[variables('labVirtualNetworkId')]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gatewayPublicIpName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('gatewayName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('gatewayVirtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gatewaySubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayPublicIpName'))]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": "false",
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "[parameters('vpnClientAddressPrefix')]"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "name": "[parameters('vpnClientRootCertName')]",
                            "properties": {
                                "PublicCertData": "[parameters('vpnClientRootCertData')]"
                            }
                        }
                    ],
                    "vpnClientRevokedCertificates": [
                    ]
                }
            }
        }
    ]
}